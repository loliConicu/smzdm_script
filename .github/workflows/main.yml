name: SMZDM 调试测试

on:
  workflow_dispatch:

jobs:
  debug-smzdm:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: 安装依赖
      run: |
        npm install got@11 crypto-js --no-package-lock
    
    - name: 调试环境变量和脚本
      env:
        SMZDM_COOKIE: ${{ secrets.SMZDM_COOKIE }}
        SMZDM_SK: ${{ secrets.SMZDM_SK }}
        SMZDM_COMMENT: ${{ secrets.SMZDM_COMMENT }}
        SMZDM_CROWD_SILVER_5: ${{ secrets.SMZDM_CROWD_SILVER_5 }}
        SMZDM_TASK_TESTING: ${{ secrets.SMZDM_TASK_TESTING }}
      run: |
        echo "=== 环境变量检查 ==="
        if [ -z "$SMZDM_COOKIE" ]; then
          echo "❌ SMZDM_COOKIE 为空！这是脚本无输出的主要原因！"
          echo "请检查 GitHub Secrets 中的配置"
          exit 1
        else
          echo "✅ SMZDM_COOKIE 已配置 (长度: ${#SMZDM_COOKIE})"
          echo "前30个字符: ${SMZDM_COOKIE:0:30}..."
        fi
        
        echo ""
        echo "=== 脚本文件检查 ==="
        ls -la smzdm_*.js
        
        echo ""
        echo "=== 运行单个脚本进行测试 ==="
        echo "添加调试输出到脚本..."
        
        # 临时修改脚本添加调试信息
        if [ -f "smzdm_checkin.js" ]; then
          echo "console.log('🚀 SMZDM签到脚本开始运行...');" > debug_checkin.js
          echo "console.log('Cookie长度:', process.env.SMZDM_COOKIE ? process.env.SMZDM_COOKIE.length : '未设置');" >> debug_checkin.js
          echo "console.log('当前时间:', new Date().toISOString());" >> debug_checkin.js
          echo "" >> debug_checkin.js
          cat smzdm_checkin.js >> debug_checkin.js
          
          echo "运行调试版本的签到脚本："
          timeout 60 node debug_checkin.js || echo "脚本运行超时或出错"
        fi
        
        echo ""
        echo "=== 检查脚本前几行内容 ==="
        head -20 smzdm_checkin.js
        
        echo ""
        echo "=== 搜索可能的退出条件 ==="
        grep -n "process.exit\|return\|throw\|console.log" smzdm_checkin.js | head -10
